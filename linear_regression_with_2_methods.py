# -*- coding: utf-8 -*-
"""Linear Regression with 2 methods

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bvj6dFZk2M__iZn3corQPESizbeyxQc9
"""

# Commented out IPython magic to ensure Python compatibility.
# importing the required libaries
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
# %matplotlib inline

df=pd.read_csv("Salary_Data.csv") # reading the data

df

x1=df[['YearsExperience']]
x2=df[['Salary']]

plt.scatter(x1,x2)

reg = LinearRegression()
reg.fit(x1,x2)

reg.predict(x1)



plt

#blue colour indicates Actual points of the data
# orange colour indicates predicated points ofthe data
plt.figure(figsize=(12,9))
plt.scatter(x1,x2)
plt.scatter(x1,reg.predict(x1))
plt.title('Salary vs Experience' )
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.colorbar()

#blue colour indicates Actual points of the data
# orange colour indicates predicated points ofthe data
plt.figure(figsize=(12,9))
plt.scatter(x1,x2)
plt.plot(x1,reg.predict(x1),color='g')
plt.title('Salary vs Experience' )
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.colorbar()

x=df.iloc[:, :-1].values # using iloc function for acess row and coloumn
y = df.iloc[:, 1].values

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 1/3,random_state =0)

x_train

# Fitting Simple Linear Regression to the Training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(x_train, y_train)

# Visualising the Training set results
plt.scatter (x_train, y_train, color = 'blue')
plt.plot(x_train, regressor.predict(x_train), color = 'green')
plt.title('Salary vs Experience (Test set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.grid()

# Visualising the Test set results
plt.scatter(x_test, y_test, color = 'green')
plt.plot(x_train, regressor.predict(x_train), color = 'blue')
plt.title('Salary vs Experience (Test set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.grid()

from sklearn.metrics import mean_squared_error,r2_score

mean_squared_error(x2,regr.predict(x1))

r2_score(x2,regr.predict(x1))